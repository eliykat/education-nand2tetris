// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {

    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        field Array stringArray;
        field int currentLength;

        if (maxLength < 0) {
            do Sys.error(14);
        }

        let stringArray = Array.new();
        let currentLength = 0;

        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do Memory.deAlloc(this);
    }

    /** Returns the current length of this string. */
    method int length() {
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        if (j > currentLength - 1){
            do Sys.error(15);
        }

        return this[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        if (j > currentLength - 1){
            do Sys.error(16);
        }

        let this[j] = c;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {

        if (currentLength = maxLength) {
            do Sys.error(17);
        }

        let stringArray[currentLength] = c;
        let currentLength = currentLength + 1;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {

        if (currentLength = 0) {
            do Sys.error(18);
        }

        let currentLength = currentLength - 1;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {

        var int i;
        let i = 0;

        // TODO
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        // TODO
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
